java:
  secrets:
    STORAGE_ACCOUNT_NAME:
      secretRef: storage-secret-{{ .Release.Name }}
      key: storageAccountName
    STORAGE_ACCOUNT_KEY:
      secretRef: storage-secret-{{ .Release.Name }}
      key: accessKey
    STORAGE_ACCOUNT_SECONDARY_KEY:
      secretRef: storage-secret-{{ .Release.Name }}
      key: accessKey
    STORAGE_BULKSCAN_ACCOUNT_NAME:
      secretRef: storage-secret-cft-{{ .Release.Name }}
      key: storageAccountName
    STORAGE_BULKSCAN_ACCOUNT_KEY:
      secretRef: storage-secret-cft-{{ .Release.Name }}
      key: accessKey
    STORAGE_CRIME_ACCOUNT_NAME:
      secretRef: storage-secret-crime-{{ .Release.Name }}
      key: storageAccountName
    STORAGE_CRIME_ACCOUNT_KEY:
      secretRef: storage-secret-crime-{{ .Release.Name }}
      key: accessKey
  keyVaults:
    reform-scan:
      resourceGroup: reform-scan
      secrets:
        - error-notifications-password
        - error-notifications-url
        - error-notifications-username
  environment:
    DB_HOST: "{{ .Release.Name }}-postgresql"
    DB_NAME: "{{ .Values.postgresql.postgresqlDatabase}}"
    DB_USER: "{{ .Values.postgresql.postgresqlUsername}}"
    DB_PASSWORD: "{{ .Values.postgresql.postgresqlPassword}}"
    DB_CONN_OPTIONS: ""

    DELETE_DISPATCHED_FILES_CRON: "0/10 * * * * *"
    TASK_SCAN_DELAY: "1000" # in millis

    FLYWAY_SKIP_MIGRATIONS: false
    FLYWAY_URL: "jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/{{ .Values.postgresql.postgresqlDatabase}}"
    FLYWAY_USER: "{{ .Values.postgresql.postgresqlUsername}}"
    FLYWAY_PASSWORD: "{{ .Values.postgresql.postgresqlPassword}}"
    STORAGE_BLOB_PROCESSING_DELAY_IN_MINUTES: 0

    STORAGE_BULKSCAN_CONNECTION_STRING: "DefaultEndpointsProtocol=https;AccountName=$(STORAGE_BULKSCAN_ACCOUNT_NAME);AccountKey=$(STORAGE_BULKSCAN_ACCOUNT_KEY);EndpointSuffix=core.windows.net"
    STORAGE_CRIME_CONNECTION_STRING: "DefaultEndpointsProtocol=https;AccountName=$(STORAGE_CRIME_ACCOUNT_NAME);AccountKey=$(STORAGE_CRIME_ACCOUNT_KEY);EndpointSuffix=core.windows.net"
  # Don't modify below here
  image: ${IMAGE_NAME}
  ingressHost: ""
  aadIdentityName:

  postgresql:
    enabled: true
    postgresqlUsername: db_user
    postgresqlPassword: db_pass
    postgresqlDatabase: db
    initdbScripts:
      init.sql: |-
        CREATE DATABASE "bulk_scan" WITH OWNER = db_user ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
reformblobstorage:
  enabled: true
  resourceGroup: reform-scan-aks
  teamName: "BSP"
  location: ukwest
  setup:
    containers:
      - bulkscan
      - bulkscan-rejected
      - crime
      - crime-rejected

cftblobstorage:
  enabled: true
  resourceGroup: reform-scan-aks
  releaseNameOverride: cft-{{ .Release.Name }}
  teamName: "BSP"
  location: ukwest
  setup:
    containers:
      - bulkscan
      - bulkscan-rejected

crimeblobstorage:
  enabled: true
  resourceGroup: reform-scan-aks
  releaseNameOverride: crime-{{ .Release.Name }}
  teamName: "BSP"
  location: ukwest
  setup:
    containers:
      - crime
bulkscanprocessor:
  enabled: true
  java:
    aadIdentityName:
    releaseNameOverride: "{{ .Release.Name }}-bsp"
    ingressHost: bulk-scan-processor-pr.service.core-compute-pr.internal
    secrets:
      STORAGE_ACCOUNT_NAME:
        secretRef: storage-secret-cft-{{ .Release.Name }}
        key: storageAccountName
      STORAGE_KEY:
        secretRef: storage-secret-cft-{{ .Release.Name }}
        key: accessKey
      SB_CONN_STRING:
        secretRef: servicebus-secret-namespace-{{ .Release.Name }}
        key: connectionString
    environment:
      STORAGE_URL: "https://$(STORAGE_ACCOUNT_NAME).blob.core.windows.net"
      BULK_SCANNING_DB_USER_NAME: "{{ .Values.global.postgresqlUsername}}"
      BULK_SCANNING_DB_PASSWORD: "{{ .Values.global.postgresqlPassword}}"
      BULK_SCANNING_DB_NAME: bulk_scan
      BULK_SCANNING_DB_HOST: "{{ .Release.Name }}-postgresql"
      FLYWAY_URL: "jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/bulk_scan"
      FLYWAY_USER: "{{ .Values.global.postgresqlUsername}}"
      FLYWAY_PASSWORD: "{{ .Values.global.postgresqlPassword}}"
      FLYWAY_NOOP_STRATEGY: "false"
      PROCESS_PAYMENTS_ENABLED: "false"
      OCR_VALIDATION_URL_BULKSCAN_SAMPLE_APP: "http://bulk-scan-sample-app-aat.service.core-compute-aat.internal"
      DELETE_REJECTED_FILES_ENABLED: "false"
      QUEUE_ENVELOPE_SEND: "$(SB_CONN_STRING);EntityPath=envelopes"
      QUEUE_NOTIFICATIONS_SEND: "$(SB_CONN_STRING);EntityPath=notifications"
      QUEUE_NOTIFICATIONS_READ: "$(SB_CONN_STRING);EntityPath=notifications"
      QUEUE_PROCESSED_ENVELOPES_READ: "$(SB_CONN_STRING);EntityPath=processed-envelopes"
      PROCESSED_ENVELOPES_QUEUE_WRITE_CONN_STRING: "${SB_CONN_STRING};EntityPath=processed-envelopes"
    keyVaults:
      "bulk-scan":
        secrets:
          - s2s-secret
  servicebus:
    resourceGroup: bulk-scan-aks
    teamName: "Software Engineering"
    location: uksouth
    serviceplan: basic
    setup:
      queues:
        - name: envelopes
        - name: notifications
        - name: processed-envelopes
    enabled: true
global:
  postgresqlUsername: db_user
  postgresqlPassword: db_pass

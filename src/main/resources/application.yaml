server:
  port: 8584

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
  health:
    mail:
      enabled: false

spring:
  application:
    name: Blob Router Service
  datasource:
    url: jdbc:postgresql://localhost:5432/db
    username: ${DB_USER:}
    password: ${DB_PASSWORD:}
    properties:
      charSet: UTF-8
    hikari:
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 10000
      poolName: RouterHikariCP
      maxLifetime: 7200000
      connectionTimeout: 30000
  mail:
    host: ${SMTP_HOST:host}
    username: ${SMTP_USERNAME:user}
    password: ${SMTP_PASSWORD:pwd}
    port: 587
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    test-connection: false

service:
  storage-config:
    - source-container: bulkscan
      sas-validity: 300 #In seconds
      target-storage-account: bulkscan
      target-container: bulkscan
    - source-container: cmc
      sas-validity: 300 #In seconds
      target-storage-account: bulkscan
      target-container: cmc
    - source-container: crime
      sas-validity: 300 #In seconds
      enabled: ${CRIME_ENABLED:false}
      target-storage-account: crime
      target-container: ${CRIME_DESTINATION_CONTAINER:crime}
    - source-container: divorce
      sas-validity: 300 #In seconds
      target-storage-account: bulkscan
      target-container: divorce
    - source-container: finrem
      sas-validity: 300 #In seconds
      target-storage-account: bulkscan
      target-container: finrem
    - source-container: probate
      sas-validity: 300 #In seconds
      target-storage-account: bulkscan
      target-container: probate
    - source-container: sscs
      sas-validity: 300 #In seconds
      target-storage-account: bulkscan
      target-container: sscs
    - source-container: publiclaw
      sas-validity: 300 #In seconds
      target-storage-account: bulkscan
      target-container: publiclaw

queue:
  notifications:
    connection-string: ${NOTIFICATIONS_QUEUE_CONNECTION_STRING:notif}

reports:
  recipients: ${REPORTS_RECIPIENTS:rep}

flyway:
  skip-migrations: ${FLYWAY_SKIP_MIGRATIONS:flw}

storage-blob-processing-delay-in-minutes: ${STORAGE_BLOB_PROCESSING_DELAY_IN_MINUTES:1}
include-write-permission-in-storage-sas-token: ${INCLUDE_WRITE_PERMISSION_IN_STORAGE_SAS_TOKEN:false}
public_key_der_file: ${STORAGE_BLOB_PUBLIC_KEY:der} # public key file in der format

bulk-scan-cache:
    refresh-before-expire-in-sec: 30

scheduling:
  lock_at_most_for: PT10M # 10 minutes in ISO-8601
  task:
    delete-dispatched-files:
      enabled: true
      cron: ${DELETE_DISPATCHED_FILES_CRON:0 0 6 * * *}
    handle-rejected-files:
      enabled: true
      cron: ${HANDLE_REJECTED_FILES_CRON:0 0 6 * * *}
    reject-duplicates:
      enabled: true
      cron: ${REJECT_DUPLICATES_CRON:0 0 6 * * *}
    send-notifications:
      enabled: true
      cron: ${SEND_NOTIFICATIONS_CRON:0 0 6 * * *}
    delete-rejected-files:
      enabled: true
      ttl: PT72H # ISO-8601
      cron: 0 0 6 * * *
    check-new-envelopes:
      time-interval: PT60M # ISO-8601
      cron: ${CHECK_NEW_ENVELOPES_CRON:0 0 6 * * *}
      enabled: true
    scan:
      delay: ${TASK_SCAN_DELAY:100000} # In milliseconds
    send-daily-report:
      cron: ${SEND_DAILY_REPORT_CRON:0 0 6 * * *}
      enabled: ${SEND_DAILY_REPORT_ENABLED:0 0 6 * * *}

proxy:
  enabled: ${PROXY_ENABLED:true}
  host-name: proxyout.reform.hmcts.net
  port: 8080
